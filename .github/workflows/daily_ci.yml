on:
  workflow_dispatch:
  workflow_call:
  schedule:
    - cron: '0 8 * * *'

name: 'Daily CI Tests'

defaults:
  run:
    shell: bash

jobs:
  docker_image:
    uses: ./.github/workflows/docker_image.yml
    with:
      tool: 'tools'
      sc_version: ${{ github.ref }}

  daily_tests_job:
    needs: docker_image
    timeout-minutes: 120
    runs-on: ubuntu-20.04 # Match ubuntu version with container
    container:
      image: ${{ needs.docker_image.outputs.sc_tool }}

    name: 'All tests'
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
      - name: Checkout SiliconCompiler
        uses: actions/checkout@v4

      - name: Set tools and permissions for caching
        run: |
          chown -R root: ~
          ln -s $RUNNER_TOOL_CACHE /opt/hostedtoolcache
          echo "LD_LIBRARY_PATH_BACKUP=$LD_LIBRARY_PATH" >> "$GITHUB_ENV"

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        env:
          AGENT_TOOLSDIRECTORY: ${{ runner.tool_cache }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          allow-prereleases: true

      - name: Run tests
        run: |
          /start_slurm.sh

          export LD_LIBRARY_PATH="${{ env.LD_LIBRARY_PATH_BACKUP }}"
          echo $LD_LIBRARY_PATH
          ${{ steps.setup-python.outputs.python-path }} -m venv clean_env
          source clean_env/bin/activate
          python3 --version

          python3 -m pip install --upgrade pip
          python3 -m pip install .[test,examples]
          pytest -n auto -m "not docker" --durations=0 --clean

  daily_tests_job_docker_linux:
    needs: docker_image
    timeout-minutes: 60
    runs-on: ubuntu-latest

    name: 'All docker tests (linux)'
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
      - name: Checkout SiliconCompiler
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          allow-prereleases: true

      - name: Run tests
        run: |
          ${{ steps.setup-python.outputs.python-path }} -m venv clean_env
          source clean_env/bin/activate
          python3 --version

          export SC_IMAGE=${{ needs.docker_image.outputs.sc_tool }}

          python3 -m pip install --upgrade pip
          python3 -m pip install .[test]
          pytest -n auto -m "docker" --durations=0 --clean

  gallery:
    uses: siliconcompiler/scgallery/.github/workflows/run-designs.yml@main
    with:
      sc-ref: ${{ github.ref }}
      concurrency: 30
