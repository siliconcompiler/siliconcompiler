name: 'Python CI Tests'

on:
  # Runs on pushes to test/ branches and main
  push:
    branches:
      - 'main'
      - 'test/**'
  # Runs on all PRs
  pull_request:
  # Manual Dispatch
  workflow_dispatch:

concurrency:
  group: python-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  python_test_job:
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    name: 'Pure Python tests'
    strategy:
      fail-fast: false
      matrix:
        python: ["3.9", "3.10", "3.11", "3.12", "3.13", "3.14"]
        os: ["ubuntu-latest", "ubuntu-24.04-arm", "windows-latest", "macos-latest"]
        # Python 3.9 is on macos-13 but not macos-latest (macos-14-arm64)
        # https://github.com/actions/setup-python/issues/696#issuecomment-1637587760
        exclude:
          - { python: "3.9", os: "macos-latest" }
        include:
          - { python: "3.9", os: "macos-13" }

    steps:
      - uses: actions/checkout@v5

      - name: Install Dependencies (linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install graphviz

      - name: Install Dependencies (windows)
        if: runner.os == 'Windows'
        run: |
          choco install -y graphviz
          New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force
          git config --system core.longpaths true

      - name: Install Dependencies (macos-13)
        if: matrix.os == 'macos-13'
        run: |
          # || true is needed to avoid failure on brew link error with python3.12
          brew install graphviz || true

      - name: Install Dependencies (macos)
        if: matrix.os == 'macos-latest'
        run: |
          brew install graphviz

      - name: Set up Python ${{ matrix.python }}
        id: python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python }}
          cache: pip
          allow-prereleases: true

      - name: Setup Python
        if: runner.os != 'Windows'
        run: |
          ${{ steps.python.outputs.python-path }} -m venv .venv
          . .venv/bin/activate
          python3 --version
          pip install --upgrade pip
          pip install -e .[test]

      - name: Run Python tests
        timeout-minutes: 15
        if: runner.os != 'Windows'
        run: |
          . .venv/bin/activate

          # change running directory
          mkdir testrun
          cd testrun

          pytest $GITHUB_WORKSPACE -n logical -m "not eda and not docker" --cov --cov-report=xml --durations=0

      - name: Setup Python (windows)
        timeout-minutes: 15
        if: runner.os == 'Windows'
        run: |
          ${{ steps.python.outputs.python-path }} -m venv venv
          .\venv\Scripts\activate
          python3 --version
          python.exe -m pip install --upgrade pip
          pip install -e .[test]

      - name: Run Python tests (windows)
        if: runner.os == 'Windows'
        run: |
          .\venv\Scripts\activate

          # change running directory
          mkdir testrun
          cd testrun

          pytest $Env:GITHUB_WORKSPACE -n logical -m "not eda and not docker" --cov --cov-report=xml --durations=0

      - name: Upload coverage reports to Codecov
        continue-on-error: true
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          name: codecov-${{ matrix.python }}-${{ matrix.os }}
          verbose: true

  python_docs_test:
    timeout-minutes: 30
    runs-on: "ubuntu-latest"
    name: 'Pure Python tests with docs'

    steps:
      - uses: actions/checkout@v5

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install graphviz

      - name: Setup Python
        run: |
          python3 -m venv .venv
          . .venv/bin/activate
          python3 --version
          pip install --upgrade pip
          pip install -e .[test,docs]

      - name: Run Python tests
        timeout-minutes: 15
        run: |
          . .venv/bin/activate

          # change running directory
          mkdir testrun
          cd testrun

          pytest $GITHUB_WORKSPACE -n logical -m "not eda and not docker" --cov --cov-report=xml --durations=0

      - name: Upload coverage reports to Codecov
        continue-on-error: true
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          name: codecov-python-with-docs
          verbose: true
