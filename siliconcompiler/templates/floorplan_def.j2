VERSION 5.8 ;
DIVIDERCHAR "/" ;
BUSBITCHARS "[]" ;
DESIGN {{ fp.design }} ;
UNITS DISTANCE MICRONS {{ fp.db_units }} ;
DIEAREA {{ fp.die_area | map('scale') | map('render_tuple') | join(' ') }} ;

{% for row in fp.rows %}
ROW {{ row.name }} {{ row.site }} {{ row.x | scale }} {{ row.y | scale }} {{ row.orientation }}
    DO {{ row.numx }} BY {{ row.numy }} STEP {{ row.stepx | scale }} {{ row.stepy | scale }} ;
{% endfor %}

{% for track in fp.tracks %}
TRACKS {{ track.direction | upper }} {{ track.start | scale }} DO {{ track.total }} STEP {{ track.step | scale }}
    LAYER {{ track.layer}} ;
{% endfor %}

VIAS {{ fp.viarules | length }} ;
    {% for rule in fp.viarules %}
    - {{ rule.name }} + VIARULE {{ rule.rule }}
                      + CUTSIZE {{ rule.cutsize | map('scale') | join(' ') }}
                      + LAYERS {{ rule.layers | join(' ') }}
                      + CUTSPACING {{ rule.cutspacing | map('scale') | join(' ') }}
                      + ENCLOSURE {{ rule.enclosure | map('scale') | join(' ') }}
                      {% if rule.rowcol %}
                      + ROWCOL {{ rule.rowcol | join(' ') }}
                      {% endif %};
    {% endfor %}
END VIAS

COMPONENTS {{ fp.macros | length }} ;
{% for macro in fp.macros %}
   - {{ macro.name }} {{ macro.cell }}
      {% if macro.status %}
      + {{ macro.status | upper }} ( {{macro.x | scale }} {{ macro.y | scale }} ) {{ macro.orientation }}
      {% endif %}
      {% if macro.halo %}
      + HALO {{ macro.halo | map('scale') | join(' ') }}
      {% endif %} ;
{% endfor %}
END COMPONENTS

PINS {{ fp.pins | length }} ;
{% for pin in fp.pins %}
    - {{ pin.name }} + NET {{ pin.net }} + DIRECTION {{ pin.direction|upper }} + USE {{ pin.use|upper }}
       + PORT
         + LAYER {{ pin.port.layer }} {{ pin.port.box | map('scale') | map('render_tuple') | join(' ') }}
         {% if pin.port.status %}
         + {{ pin.port.status|upper }} {{ pin.port.point | map('scale') | render_tuple }} {{ pin.port.orientation }} ;
         {% endif %}
{% endfor %}
END PINS

BLOCKAGES {{ fp.blockages | length }} ;
    {% for blockage in fp.blockages %}
    - {% if blockage.layer %}LAYER {{ blockage.layer }}{% else %}PLACEMENT{% endif %}

        RECT {{ blockage.ll | map('scale') | render_tuple }} {{ blockage.ur | map('scale') | render_tuple }} ;
    {% endfor %}
END BLOCKAGES

SPECIALNETS {{ fp.nets | length }} ;
{% for name, net in fp.nets.items() %}
    - {{ name }} {% for pin in net.pins %} ( * {{ pin }} ) {% endfor %} + USE {{ net.use }}
    {% for wire in net.wires %}
        {% if loop.first %}
        + ROUTED
        {% else %}
        NEW
        {% endif %}
        {{ wire.layer }} {{ wire.width | scale }} + SHAPE {{ wire.shape | upper }} {{ wire.start | scale | render_tuple }} {{ wire.end | scale | render_tuple }}
    {% endfor %}
    {% for via in net.vias %}
        {% if loop.first and net.wires | length == 0 %}
        + ROUTED
        {% else %}
        NEW
        {% endif %}
        {{ via.layer }} 0 + SHAPE STRIPE {{ via.point | scale | render_tuple }} {{ via.rule }}
    {% endfor %} ;
{% endfor %}
END SPECIALNETS

END DESIGN
